{"version":3,"sources":["components/Login/Login.module.css","components/Login/Login.jsx","components/Login/LoginContainer.jsx"],"names":["module","exports","validationSchema","yup","shape","email","required","password","min","useStyles","makeStyles","theme","root","margin","LoginForm","props","classes","formik","useFormik","initialValues","rememberMe","onSubmit","values","a","login","className","handleSubmit","TextField","name","label","type","value","onChange","handleChange","onBlur","handleBlur","error","touched","Boolean","errors","helperText","variant","color","fullWidth","Checkbox","checked","Button","disabled","isSubmitting","LoginContainer","connect","state","isAuth","auth","formError","messages","style","loginForm","Alert","severity"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,UAAY,2B,0LCiBrDC,EAAmBC,MAAaC,MAAM,CAC1CC,MAAOF,MAAaE,QAAQC,WAC5BC,SAAUJ,MAAaK,IAAI,GAAGF,aAG1BG,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,uBAAwB,CACtBC,OAAQ,kBAKRC,EAAY,SAACC,GACjB,IAAMC,EAAUP,IACVQ,EAASC,YAAU,CACvBC,cAAe,CAAEd,MAAO,GAAIE,SAAU,GAAIa,YAAY,GACtDC,SAAS,WAAD,4BAAE,WAAOC,GAAP,SAAAC,EAAA,sEACFR,EAAMS,MAAMF,EAAOjB,MAAOiB,EAAOf,SAAUe,EAAOF,YADhD,2CAAF,mDAAC,GAGTlB,iBAAkBA,IAEpB,OACE,uBAAMuB,UAAWT,EAAQJ,KAAMS,SAAUJ,EAAOS,aAAhD,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLC,MAAM,SACNC,KAAK,QACLC,MAAOd,EAAOK,OAAOjB,MACrB2B,SAAUf,EAAOgB,aACjBC,OAAQjB,EAAOkB,WACfC,MAAOnB,EAAOoB,QAAQhC,OAASiC,QAAQrB,EAAOsB,OAAOlC,OACrDmC,WAAYvB,EAAOsB,OAAOlC,MAC1BoC,QAAQ,WACRC,MAAM,UACNC,WAAS,IAEX,cAAChB,EAAA,EAAD,CACEC,KAAK,WACLC,MAAM,WACNC,KAAK,WACLC,MAAOd,EAAOK,OAAOf,SACrByB,SAAUf,EAAOgB,aACjBC,OAAQjB,EAAOkB,WACfC,MAAOnB,EAAOoB,QAAQ9B,UAAY+B,QAAQrB,EAAOsB,OAAOhC,UACxDiC,WAAYvB,EAAOsB,OAAOhC,SAC1BkC,QAAQ,WACRC,MAAM,UACNC,WAAS,IAEX,cAACC,EAAA,EAAD,CACEhB,KAAK,aACLiB,QAAS5B,EAAOK,OAAOF,WACvBY,SAAUf,EAAOgB,aACjBS,MAAM,YA/BV,cAkCE,cAACI,EAAA,EAAD,CACEhB,KAAK,SACLW,QAAS,YACTC,MAAM,UACNK,SAAU9B,EAAO+B,aACjBL,WAAS,EALX,wBClEAM,EAAiBC,aALD,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,OACnBE,UAAWH,EAAME,KAAKE,SAAS,MAGe,CAAE/B,WAA3B0B,EDFF,SAACnC,GACpB,OACE,qBAAKU,UAAW+B,IAAMhC,MAAtB,SACE,sBAAKC,UAAW+B,IAAMC,UAAtB,UACG1C,EAAMuC,WAAa,cAACI,EAAA,EAAD,CAAOC,SAAS,QAAhB,SAAyB5C,EAAMuC,YACnD,cAAC,EAAD,eAAevC,YCDRkC","file":"static/js/9.7cee5851.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__2Px22\",\"loginForm\":\"Login_loginForm__1Hg13\"};","import React from \"react\";\nimport style from \"./Login.module.css\";\nimport { useFormik } from \"formik\";\nimport { TextField, Checkbox, Button, makeStyles } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport * as yup from \"yup\";\n\nexport const Login = (props) => {\n  return (\n    <div className={style.login}>\n      <div className={style.loginForm}>\n        {props.formError && <Alert severity=\"error\">{props.formError}</Alert>}\n        <LoginForm {...props} />\n      </div>\n    </div>\n  );\n};\n\nconst validationSchema = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup.string().min(6).required(),\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: \"10px auto\",\n    },\n  },\n}));\n\nconst LoginForm = (props) => {\n  const classes = useStyles();\n  const formik = useFormik({\n    initialValues: { email: \"\", password: \"\", rememberMe: false },\n    onSubmit: async (values) => {\n      await props.login(values.email, values.password, values.rememberMe);\n    },\n    validationSchema: validationSchema,\n  });\n  return (\n    <form className={classes.root} onSubmit={formik.handleSubmit}>\n      <TextField\n        name=\"email\"\n        label=\"e-mail\"\n        type=\"email\"\n        value={formik.values.email}\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        error={formik.touched.email && Boolean(formik.errors.email)}\n        helperText={formik.errors.email}\n        variant=\"outlined\"\n        color=\"primary\"\n        fullWidth\n      />\n      <TextField\n        name=\"password\"\n        label=\"password\"\n        type=\"password\"\n        value={formik.values.password}\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        error={formik.touched.password && Boolean(formik.errors.password)}\n        helperText={formik.errors.password}\n        variant=\"outlined\"\n        color=\"primary\"\n        fullWidth\n      />\n      <Checkbox\n        name=\"rememberMe\"\n        checked={formik.values.rememberMe}\n        onChange={formik.handleChange}\n        color=\"primary\"\n      />\n      remember me\n      <Button\n        type=\"submit\"\n        variant={\"contained\"}\n        color=\"primary\"\n        disabled={formik.isSubmitting}\n        fullWidth\n      >\n        log in\n      </Button>\n    </form>\n  );\n};\n","import { connect } from \"react-redux\";\nimport { login } from \"../../redux/auth-reduser\";\nimport { Login } from \"./Login\";\n\nlet mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth,\n  formError: state.auth.messages[0],\n});\n\nconst LoginContainer = connect(mapStateToProps, { login })(Login);\n\nexport default LoginContainer;\n"],"sourceRoot":""}